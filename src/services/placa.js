const { BOT_NAME } = require("../config");
const axios = require("axios");
const { InvalidParameterError } = require("../errors/InvalidParameterError");
const { WarningError } = require("../errors/WarningError");
const { getValidResponse } = require("../utils");

exports.placa1 = async (args, CommandName, nickName) => {
  if (!args[0]) {
    throw new InvalidParameterError( 
      "Placa inv√°lida. Por favor, forne√ßa uma placa no formato AAA0X00 ou AAA9999."
    );
  }

  const placa = args[0].replace(/[\s-]/g, '').replace(/[^\w]/g, '');

  if (!placa || ![7, 8].includes(placa.length)) {
    throw new InvalidParameterError(
      "Placa inv√°lida. Por favor, forne√ßa uma placa no formato AAA0X00 ou AAA9999."
    );
  }

  try {
    const response = await axios.get(
      `` //api de placa aqui.
    );
    const data = response.data;

    if (data === null) {
      throw new WarningError("Placa n√£o encontrada na base de dados!");
    }

    return `„Äé ‚éã *PLACA SIMPLES* ‚éã „Äè(DETRAN)
      
üöò *Informa√ß√µes do Ve√≠culo*
‚Ä¢ *Marca*: ${data?.MARCA}
‚Ä¢ *Modelo*: ${data?.MODELO}
‚Ä¢ *Submodelo*: ${data?.SUBMODELO}
‚Ä¢ *Vers√£o*: ${data?.VERSAO}
‚Ä¢ *Ano*: ${data?.ano}
‚Ä¢ *Ano do Modelo*: ${data?.anoModelo}
‚Ä¢ *Chassi*: ${data?.extra?.chassi}
‚Ä¢ *C√≥digo de Retorno*: ${data?.codigoRetorno}
‚Ä¢ *C√≥digo de Situa√ß√£o*: ${data?.codigoSituacao}
‚Ä¢ *Cor*: ${data?.extra?.cor_veiculo?.cor}
‚Ä¢ *Data*: ${data?.data}
‚Ä¢ *Data de Atualiza√ß√£o do Alarme*: ${data?.dataAtualizacaoAlarme}
‚Ä¢ *Data de Atualiza√ß√£o das Caracter√≠sticas do Ve√≠culo*: ${data?.dataAtualizacaoCaracteristicasVeiculo}
‚Ä¢ *Data de Atualiza√ß√£o de Roubo/Furto*: ${data?.dataAtualizacaoRouboFurto}
‚Ä¢ *Ano de Fabrica√ß√£o*: ${data?.extra?.ano_fabricacao}
‚Ä¢ *Ano do Modelo*: ${data?.extra?.ano_modelo}
‚Ä¢ *Caixa de C√¢mbio*: ${data?.extra?.caixa_cambio}
‚Ä¢ *Capacidade M√°xima de Tra√ß√£o*: ${data?.extra?.cap_maxima_tracao}
‚Ä¢ *Capacidade de Carga*: ${data?.extra?.capacidade_carga}
‚Ä¢ *Carroceria*: ${data?.extra?.carroceria}
‚Ä¢ *Cilindradas*: ${data?.extra?.cilindradas}
‚Ä¢ *Combust√≠vel*: ${data?.extra?.combustivel?.combustivel}
‚Ä¢ *Data de Atualiza√ß√£o*: ${data?.extra?.data_atualiacao}
‚Ä¢ *DI*: ${data?.extra?.di}
‚Ä¢ *Eixo Traseiro Diferencial*: ${data?.extra?.eixo_traseiro_dif}
‚Ä¢ *Eixos*: ${data?.extra?.eixos}
‚Ä¢ *Esp√©cie do Ve√≠culo*: ${data?.extra?.especie_veiculo}
‚Ä¢ *Faturado*: ${data?.extra?.faturado}
‚Ä¢ *ID*: ${data?.extra?.id}
‚Ä¢ *Identificador da Importadora*: ${data?.extra?.ident_importadora}
‚Ä¢ *Limite de Restri√ß√£o Tribut√°ria*: ${data?.extra?.limite_restricao_trib}
‚Ä¢ *Linha*: ${data?.extra?.linha}
      
üöó *Marca/Modelo*
‚Ä¢ *Grupo*: ${data?.extra?.marca_modelo?.grupo}
‚Ä¢ *Marca*: ${data?.extra?.marca_modelo?.marca}
‚Ä¢ *Modelo*: ${data?.extra?.marca_modelo?.modelo}
‚Ä¢ *Segmento*: ${data?.extra?.marca_modelo?.segmento}
‚Ä¢ *Subsegmento*: ${data?.extra?.marca_modelo?.sub_segmento}
‚Ä¢ *Vers√£o*: ${data?.extra?.marca_modelo?.version}
            
üìç *Localiza√ß√£o*
‚Ä¢ *Munic√≠pio*: ${data?.extra?.municipio?.municipio}, ${data?.extra?.municipio?.uf}
            
üìã *Outras Informa√ß√µes*
‚Ä¢ *Motor*: ${data?.extra?.motor}
‚Ä¢ *Nacionalidade*: ${data?.extra?.nacionalidade?.nacionalidade}
‚Ä¢ *Peso Bruto Total*: ${data?.extra?.peso_bruto_total}
‚Ä¢ *Placa*: ${data?.extra?.placa}
‚Ä¢ *Placa do Modelo Antigo*: ${data?.extra?.placa_modelo_antigo}
‚Ä¢ *Placa do Modelo Novo*: ${data?.extra?.placa_modelo_novo}
‚Ä¢ *Placa Nova*: ${data?.extra?.placa_nova}
‚Ä¢ *Pot√™ncia*: ${data?.extra?.potencia}
‚Ä¢ *Quantidade de Passageiros*: ${data?.extra?.quantidade_passageiro}
‚Ä¢ *Registro DI*: ${data?.extra?.registro_di}
‚Ä¢ *Renavam*: ${data?.extra?.renavam}
‚Ä¢ *Restri√ß√£o 1*: ${data?.extra?.restricao_1?.restricao}
‚Ä¢ *Restri√ß√£o 2*: ${data?.extra?.restricao_2?.restricao}
‚Ä¢ *Restri√ß√£o 3*: ${data?.extra?.restricao_3?.restricao}
‚Ä¢ *Restri√ß√£o 4*: ${data?.extra?.restricao_4?.restricao}
      
‚úµ *Alucard bot* √© um parceiro oficial da *NT-APIS*
‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ‚îâ
Ëâæ By: *${BOT_NAME}*
‚éá Search by: *${nickName}*`;
  } catch (error) {
     return error;
    }
};
